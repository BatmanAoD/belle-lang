// XXX handling "trivia" is quite difficult with the current version of Pest.
// There are plans to improve the language:
// https://github.com/pest-parser/pest/issues/333

// Non-newline whitespace is not meaningful (TODO: other Unicode whitespace?)
WHITESPACE = _{ " " | "\t" }
// Block style comments
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
// Single-line comments
COMMENT_SINGLE = _{ TRIVIA? ~ "//" ~ (!NEWLINE ~ ANY) * ~ NEWLINE }
// XXX why does this need to be excplicit to make `COMMENT_SINGLE` accept
// trivia?
TRIVIA = _{ (WHITESPACE | COMMENT)+ }
// Using newlines to terminate/separate items
EOL = _{ (COMMENT_SINGLE | NEWLINE)+ }

// Top-level elements: class, function
// Atomic because elements must start on column 0
Program = ${ SOI ~ ((Class | Function) ~ EOL* )+ ~ EOI }

// general identifiers are like those in most languages, except `_` is only
// permitted as a 'separator' character
Ident = { ASCII_ALPHA ~ ( ASCII_ALPHANUMERIC | "_"  ~ &ASCII_ALPHANUMERIC )* }

// TODO: generics
Class = ${ ClassDecl ~ ClassBody }
ClassBody = { "{" ~ ( "}" | EOL ~ ClassItem* ~ "}" ) }
// The space between the `#` and the class name is mandatory
ClassDecl = ${ "# " ~ ClassName ~ (WHITESPACE+ | EOL) }
// Class names must start with an uppercase letter and cannot contain
// underscores (TODO: permit underscores?)
ClassName = @{ ASCII_ALPHA_UPPER ~ ASCII_ALPHANUMERIC* }
ClassItem = { ClassData | ClassRequests } // | ClassMethods | ClassAux }

ClassData = { DataDecl ~ (DataMember ~ EOL)+ }
// TODO: permit indent? *require* indent?
DataDecl = @{ "## data" ~ EOL }
DataMember = { Ident ~ ":" ~ TypeName }

ClassRequests = { RequestDecl ~ (Request ~ EOL)+ }
RequestDecl = @{ "## requests" ~ EOL }
Request = { Ident ~ RequestArgs? ~ "->" ~ RequestReturn ~ RequestBody? }
RequestArgs = { "(" ~ "XXX TODO" ~ ")" }
RequestReturn = { TypeName }
// XXX newlines...?
RequestBody = { "{" ~ "XXX TODO" ~ "}" }

// TODO: generics, handlers
TypeName = { Unique? ~ (Array | ClassName | Builtin) }
Unique = { "~" }
Array = { Slice | SizedArray }
Slice = { "[" ~ TypeName ~ "]" }
SizedArray = { "[" ~ TypeName ~ "#" ~ WholeNumber ~ "]" }
// TODO: more
Builtin = { "i8" | "u8" | "i16" | "u16" | "i32" | "u32" | "i64" |"u64" | "f32" | "f64" | "char32" | "String" }

WholeNumber = @{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }

// XXX TEMP
Function = @{ "XXX come up with function def" }
